<!DOCTYPE html>
<html>
    <head>
        <title>Task Out</title>
        <link href="https://fonts.googleapis.com/css?family=Lora|Ubuntu:300,400" rel="stylesheet" type="text/css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
       <style>
            body{
    font-family: 'Ubuntu', sans-serif !important;
}
@keyframes spin {
    from {
      transform: rotate(0);
    }
    to{
      transform: rotate(359deg);
    }
  }
  
  @keyframes spin3D {
    from {
      transform: rotate3d(.5,.5,.5, 360deg);
    }
    to{
      transform: rotate3d(0deg);
    }
  }
  
  @keyframes configure-clockwise {
    0% {
      transform: rotate(0);
    }
    25% {
      transform: rotate(90deg);
    }
    50% {
      transform: rotate(180deg);
    }
    75% {
      transform: rotate(270deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
  @keyframes configure-xclockwise {
    0% {
      transform: rotate(45deg);
    }
    25% {
      transform: rotate(-45deg);
    }
    50% {
      transform: rotate(-135deg);
    }
    75% {
      transform: rotate(-225deg);
    }
    100% {
      transform: rotate(-315deg);
    }
  }
  
  @keyframes pulse {
    from {
      opacity: 1;
      transform: scale(1);
    }
    to {
      opacity: .25;
      transform: scale(.75);
    }
  }
  .spinner-box {
    width: 50px;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: transparent;
  }    
  .circle-border {
    width: 25px;
    height: 25px;
    padding: 3px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    background: #456FFF;
    background: linear-gradient(0deg, #fff 33%, #456FFF 100%);
    animation: spin .8s linear 0s infinite;
  } 
  .circle-core {
    width: 100%;
    height: 100%;
    background-color: #f2f2f2;
    border-radius: 50%;
  }
  .pulse-container {
    width: 120px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .pulse-bubble {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #456FFF;
  }
  .pulse-bubble-1 {
      animation: pulse .4s ease 0s infinite alternate;
  }
  .pulse-bubble-2 {
      animation: pulse .4s ease .2s infinite alternate;
  }
  .pulse-bubble-3 {
      animation: pulse .4s ease .4s infinite alternate;
  }
  #overlay{
    position:fixed;
    z-index:99999;
    top:0;
    left:0;
    bottom:0;
    right:0;
    background:#F2F2F2;
    transition: 1s 0.4s;
    display: flex;
    justify-content: center;
  }   
  .wait1{
    text-align: center;
    position: fixed;
    bottom: 0;
  }
  .loadPositioning{
    display: flex;
    justify-content: center;
    vertical-align: middle;
    position: fixed;
    bottom: 0;
    margin-bottom: 5rem;
  }
        </style>
        <script>
          var already_notified = false;
        </script>
        <script>
          function edit_form(res) {
            
            document.getElementById('title').value = res[1]
            document.getElementById('title_label').click(); 
            document.getElementById('date').value = res[2]
            document.getElementById('date_label').click();
            document.getElementById('time').value = res[3]
            document.getElementById('time_label').click()
            document.getElementById('endTime').value = res[4]
            document.getElementById('endTime_label').click()
            document.getElementById('notify_before').value = res[5]
            document.getElementById('notify_label').click()
            document.getElementById('image_label').click()
            document.getElementById('link').value = res[6]
            document.getElementById('link_label').click();
            document.getElementById('note').value = res[7]
            document.getElementById('note_label').click()
            document.getElementById('form_button').innerHTML = "Update Event"
        }
          function editEvent(params) 
          {
            var res = params.split(",")
            delEvent(res[0])
            edit_form(res)
            document.getElementById('form_button').innerText = "Schedule Event"
            document.getElementById('update_Event').style.display = "block"
            document.getElementById('return_p').style.display = "none"
          }
          function delEvent(params) {
            var xhttp3 = new XMLHttpRequest()
            xhttp3.withCredentials = true
            xhttp3.onreadystatechange = function () {
                if(this.readyState == 4 && this.status == 200)
                {
                    var res = JSON.parse(this.responseText).delete_msg
                    if(res == null)
                    {
                        console.log('No upcoming Notifications!! Schedule an event now!')
                    }
                    else{
                        console.log(res)
                        setTimeout(() => {
                    var xhttp = new XMLHttpRequest()
                    xhttp.withCredentials = true
                    xhttp.onreadystatechange = function () {
                        if(this.readyState == 4 && this.status == 200)
                        {
                            var res = JSON.parse(this.responseText).noti_msg
                            if(res == null)
                            {
                                document.getElementById('notifications_p').style.display = "block"
                                document.getElementById('notifications_p').innerHTML = " <span style='padding:0 0.5rem;'>No upcoming Notifications!! Schedule an event now!</span>"
                                console.log('No upcoming Notifications!! Schedule an event now!')
                                
                            }
                            else{
                                
                                document.getElementById('notifications_p').style.display = "block"
                                document.getElementById('notifications_p').innerHTML = ""
                               for(var i=0;i<res.length;i++)
                               {

                                var tmp2 = res[i].metadata.date + " "  + res[i].metadata.time 
                                   var t1 = new Date().getTime()
                                   var t2 = new Date(tmp2).getTime()
                                   console.log(t1 + "," +  t2)
                                   if(t2 < t1)
                                   {
                                    document.getElementById('notifications_p').innerHTML = 'No Events Scheduled!'
                                     
                                     delEvent(res[i].filename)
                                    
                                   }
                                   else
                                   {
                                     
                                    var updateString = res[i].filename+","+res[i].metadata.title.replace(/\'/g, "\\'")+","+res[i].metadata.date+","+res[i].metadata.time+","+res[i].metadata.endTime+","+res[i].metadata.notify_before+","+res[i].metadata.link+","+res[i].metadata.note.replace(/\'/g, "\\'")
                                    document.getElementById('notifications_p').innerHTML += 
'<ul><li><div class="bullet blue"></div><div class="time">' + res[i].metadata.time + ' - ' + res[i].metadata.endTime
  + '<p style="color:#53588b;margin-top:0.3rem;font-weight:bold">'+ res[i].metadata.date +'</p>'
  +'<p style="background: #456FFF;padding:0.2rem;border-radius:0.2rem;width:fit-content;margin-top:0.5rem;color:white;cursor:pointer"  onclick="editEvent(' + '\'' +  updateString + '\')">Edit&nbsp;&nbsp;<i class="fa fa-pencil" aria-hidden="true"></i></p>'
+'<p style="background: red;padding:0.2rem;border-radius:0.2rem;color:white;width:fit-content;margin-top:0.5rem;cursor:pointer;" onclick="delEvent(' + '\'' +  res[i].filename + '\')">Delete&nbsp;&nbsp;<i class="fa fa-trash" aria-hidden="true"></i></p>'+
'<p style="background: #53588b;padding:0.2rem;border-radius:0.2rem;color:white;width:fit-content;margin-top:0.5rem;cursor:pointer;"><a href="' + res[i].metadata.link +'" style="color:white;text-decoration:none;" target="_blank">Link&nbsp;&nbsp;<i class="fa fa-link" aria-hidden="true"></i></a></p>'+
'</div><div class="desc" style="margin-left:2rem;"><h3>' +  res[i].metadata.title + '</h3><h4>'+ res[i].metadata.note +'</h4><div class="people">'
+'<img src="image/' +  document.getElementById('email').innerText + "/" + res[i].filename + '"></div></div></li></ul>'
var h1 = parseInt(res[i].metadata.time)
                                   }                                    
} 
                            }
                        }
                    }
                    xhttp.withCredentials = false
                    xhttp.open("POST","/notifications",true)
                    xhttp.setRequestHeader('Content-type',"application/x-www-form-urlencoded")
                    xhttp.send('link='+document.getElementById('email').innerText)
        }, 1000);
  
                    }
                }
            }
            xhttp3.withCredentials = false
            xhttp3.open("POST","/delEvent",false)
            xhttp3.setRequestHeader('Content-type',"application/x-www-form-urlencoded")
            xhttp3.send('emailval='+document.getElementById('email').innerText + ','+ params)
          }
        </script>
    <script>  
        setInterval(() => {
          $().ready(()=>{
                if($("#login").is(':hidden'))
                {
                    var xhttp2 = new XMLHttpRequest()
                    xhttp2.withCredentials = true
                    xhttp2.onreadystatechange = function () {
                        if(this.readyState == 4 && this.status == 200)
                        {
                            var result = JSON.parse(this.responseText).notify
                            if(result == null)
                            {
                                already_notified = false;
                                console.log('No upcoming Notifications!! Schedule an event now!')
                            }
                            else{
                              if (!("Notification" in window)) {
              alert("This browser does not support desktop notification");
            }
            else if (Notification.permission === "granted") {
                  var options = {
                          body: result.metadata.note,
                          icon: '/image/' + document.getElementById('email').innerText + "/" + result.filename,
                          dir : "ltr"
                       };
                    var notification = new Notification(result.metadata.title,options);
                    notification.onclick = function () {
                      window.open("" + result.metadata.link + "","_blank")
                    }
            }
            else if (Notification.permission !== 'denied') {
              Notification.requestPermission(function (permission) {
                if (!('permission' in Notification)) {
                  Notification.permission = permission;
                }
             
                if (Notification.permission === "granted") {
                  var options = {
                          body: result.metadata.note,
                          icon: '/image/' + document.getElementById('email').innerText + "/" + result.filename,
                          dir : "ltr"
                       };
                    var notification = new Notification(result.metadata.title,options);
                    notification.onclick = function () {
                      window.open("" + result.metadata.link + "","_blank")
                    }
            }
              });
            }
                            already_notified = true;
                            }
                        
                    }    
                  }
                    xhttp2.withCredentials = false
                    xhttp2.open("POST","/pushnotifications",true)
                    xhttp2.setRequestHeader('Content-type',"application/x-www-form-urlencoded")
                    console.log(already_notified)
                    xhttp2.send('emailval='+document.getElementById('email').innerText+","+already_notified)
            
                  }})
                  }, 25000);
  
    </script>
    <script>
            $().ready(()=>{
                if($("#login").is(':hidden'))
                {
                    var xhttp = new XMLHttpRequest()
                    xhttp.withCredentials = true
                    xhttp.onreadystatechange = function () {
                        if(this.readyState == 4 && this.status == 200)
                        {
                            var res = JSON.parse(this.responseText).noti_msg
                            if(res == null)
                            {
                                document.getElementById('notifications_p').style.display = "block"
                                document.getElementById('notifications_p').innerHTML = '<span style="padding:0 0.5rem;">No upcoming Notifications!! Schedule an event now!</span>'
                                console.log('No upcoming Notifications!! Schedule an event now!')
                                
                            }
                            else{
                              
                                document.getElementById('notifications_p').style.display = "block"
                                document.getElementById('notifications_p').innerHTML = ""
                               for(var i=0;i<res.length;i++)
                               {
                                   var tmp2 = res[i].metadata.date + " "  + res[i].metadata.time 
                                   var t1 = new Date().getTime()
                                   var t2 = new Date(tmp2).getTime()
                                   console.log(t1 + "," +  t2)
                                   if(t2 < t1)
                                   {
                                     document.getElementById('notifications_p').innerHTML = 'No Events Scheduled!'
                                     
                                     delEvent(res[i].filename)
                                    
                                   }
                                   else
                                   {
                                     
                                    var updateString = res[i].filename+","+res[i].metadata.title.replace(/\'/g, "\\'")+","+res[i].metadata.date+","+res[i].metadata.time+","+res[i].metadata.endTime+","+res[i].metadata.notify_before+","+res[i].metadata.link+","+res[i].metadata.note.replace(/\'/g, "\\'")
                                    document.getElementById('notifications_p').innerHTML += 
'<ul><li><div class="bullet blue"></div><div class="time">' + res[i].metadata.time + ' - ' + res[i].metadata.endTime
  + '<p style="color:#53588b;margin-top:0.3rem;font-weight:bold">'+ res[i].metadata.date +'</p>'
  +'<p style="background: #456FFF;padding:0.2rem;border-radius:0.2rem;width:fit-content;margin-top:0.5rem;color:white;cursor:pointer"  onclick="editEvent(' + '\'' +  updateString + '\')">Edit&nbsp;&nbsp;<i class="fa fa-pencil" aria-hidden="true"></i></p>'
+'<p style="background: red;padding:0.2rem;border-radius:0.2rem;color:white;width:fit-content;margin-top:0.5rem;cursor:pointer;" onclick="delEvent(' + '\'' +  res[i].filename + '\')">Delete&nbsp;&nbsp;<i class="fa fa-trash" aria-hidden="true"></i></p>'+
'<p style="background: #53588b;padding:0.2rem;border-radius:0.2rem;color:white;width:fit-content;margin-top:0.5rem;cursor:pointer;"><a href="' + res[i].metadata.link +'" style="color:white;text-decoration:none;" target="_blank">Link&nbsp;&nbsp;<i class="fa fa-link" aria-hidden="true"></i></a></p>'+
'</div><div class="desc" style="margin-left:2rem;"><h3>' +  res[i].metadata.title + '</h3><h4>'+ res[i].metadata.note +'</h4><div class="people">'
+'<img src="image/' +  document.getElementById('email').innerText + "/" + res[i].filename + '"></div></div></li></ul>'
                                   }
                                  
                               } 
                            }
                        }
                    }
                    xhttp.withCredentials = false
                    xhttp.open("POST","/notifications",true)
                    xhttp.setRequestHeader('Content-type',"application/x-www-form-urlencoded")
                    xhttp.send('link='+document.getElementById('email').innerText)
                }
            })
  
        setInterval(() => {
            $().ready(()=>{
                if($("#login").is(':hidden'))
                {
                    var xhttp = new XMLHttpRequest()
                    xhttp.withCredentials = true
                    xhttp.onreadystatechange = function () {
                        if(this.readyState == 4 && this.status == 200)
                        {
                            var res = JSON.parse(this.responseText).noti_msg
                            if(res == null)
                            {
                                document.getElementById('notifications_p').style.display = "block"
                                document.getElementById('notifications_p').innerHTML = "No upcoming Notifications!! Schedule an event now!"
                                console.log('No upcoming Notifications!! Schedule an event now!')
                            }
                            else{
                                
                                document.getElementById('notifications_p').style.display = "block"
                                document.getElementById('notifications_p').innerHTML = ""
                               for(var i=0;i<res.length;i++)
                               {
                                   var tmp2 = res[i].metadata.date + " "  + res[i].metadata.time 
                                   var t1 = new Date().getTime()
                                   var t2 = new Date(tmp2).getTime()
                                   console.log(t1 + "," +  t2)
                                   if(t2 < t1)
                                   {
                                    document.getElementById('notifications_p').innerHTML = 'No Events Scheduled!'
                                     
                                     delEvent(res[i].filename)
                                    
                                   }
                                   else
                                   {
                                     
                                    var updateString = res[i].filename+","+res[i].metadata.title.replace(/\'/g, "\\'")+","+res[i].metadata.date+","+res[i].metadata.time+","+res[i].metadata.endTime+","+res[i].metadata.notify_before+","+res[i].metadata.link+","+res[i].metadata.note.replace(/\'/g, "\\'")
                                    document.getElementById('notifications_p').innerHTML += 
'<ul><li><div class="bullet blue"></div><div class="time">' + res[i].metadata.time + ' - ' + res[i].metadata.endTime
  + '<p style="color:#53588b;margin-top:0.3rem;font-weight:bold">'+ res[i].metadata.date +'</p>'
  +'<p style="background: #456FFF;padding:0.2rem;border-radius:0.2rem;width:fit-content;margin-top:0.5rem;color:white;cursor:pointer"  onclick="editEvent(' + '\'' +  updateString + '\')">Edit&nbsp;&nbsp;<i class="fa fa-pencil" aria-hidden="true"></i></p>'
+'<p style="background: red;padding:0.2rem;border-radius:0.2rem;color:white;width:fit-content;margin-top:0.5rem;cursor:pointer;" onclick="delEvent(' + '\'' +  res[i].filename + '\')">Delete&nbsp;&nbsp;<i class="fa fa-trash" aria-hidden="true"></i></p>'+
'<p style="background: #53588b;padding:0.2rem;border-radius:0.2rem;color:white;width:fit-content;margin-top:0.5rem;cursor:pointer;"><a href="' + res[i].metadata.link +'" style="color:white;text-decoration:none;" target="_blank">Link&nbsp;&nbsp;<i class="fa fa-link" aria-hidden="true"></i></a></p>'+
'</div><div class="desc" style="margin-left:2rem;"><h3>' +  res[i].metadata.title + '</h3><h4>'+ res[i].metadata.note +'</h4><div class="people">'
+'<img src="image/' + document.getElementById('email').innerText + "/" + res[i].filename + '"></div></div></li></ul>'
                               
                               }
                              } 
                            }
                        }
                    }
                    xhttp.withCredentials = false
                    xhttp.open("POST","/notifications",true)
                    xhttp.setRequestHeader('Content-type',"application/x-www-form-urlencoded")
                    xhttp.send('link='+document.getElementById('email').innerText)
                }
            })
        }, 55000);
    </script>
    <script>
    ;(function()
    {
        function loadbar() 
        {
            var ovrl = document.getElementById("overlay"),
            img = document.getElementsByClassName('ifrms'),
            c = 0;
            tot = img.length;
            function imgLoaded(){
                c += 1;
                var perc = ((100/tot*c) << 0) +"%";
                if(c===tot) return doneLoading();
            }
            function doneLoading()
            {
                ovrl.style.opacity = 0;
                setTimeout(function(){ 
                    ovrl.style.display = "none";
                }, 1200);
            }
            for(var i=0; i<tot; i++) 
            {
                var tImg     = new Image();
                tImg.onload  = imgLoaded;
                tImg.onerror = imgLoaded;
                tImg.src     = img[i].src;
            }    
        }
        document.addEventListener('DOMContentLoaded', loadbar, false);
    }());
    </script>
    <style>
    .place{
      text-align:center;
      height: 8rem;
      overflow: hidden;
      }
      .svg-wrapper {
        position: relative;
        top: 50%;
        transform: translateY(-50%);
        margin: 0 auto;
        width: 320px;  
      }
      .shape {
        stroke-dasharray: 140 540;
        stroke-dashoffset: -474;
        stroke-width: 8px;
        fill: transparent;
        stroke: #53588b;
        border-bottom: 5px solid black;
        transition: stroke-width 1s, stroke-dashoffset 1s, stroke-dasharray 1s;
      }
      .text {
        font-size: 22px;
        line-height: 32px;
        letter-spacing: 8px;
        color: #000;
        top: -48px;
        position: relative;
      }
      .svg-wrapper:hover .shape {
        stroke-width: 2px;
        stroke-dashoffset: 0;
        stroke-dasharray: 760;
      }
      </style>
      <script>
        window.console = window.console || function(t) {};
      </script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/prefixfree/1.0.7/prefixfree.min.js"></script>
      <script>
        if (document.location.search.match(/type=embed/gi)) {
          window.parent.postMessage("resize", "*");
        }
      </script>
      <link rel="canonical" href="https://codepen.io/abisz/pen/qaEOEm/">
      <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600">
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
      <style class="INLINE_PEN_STYLESHEET_ID">
          .container {
        max-width: 400px;
        max-height: 630px;
        overflow: hidden;
        margin: 30px auto 0;
        box-shadow: 0 0 40px #a0a0a0;
        font-family: 'Open Sans', sans-serif;
      }
      
      
      .notification {
        position: absolute;
        width: 5px;
        height: 5px;
        border-radius: 50%;
        top: 2px;
        right: 2px;
        background: #F93B69;
      }
      
      .header {
        background: url('task2.png');
        background-size:contain;
        background-repeat: no-repeat;
        background-position: center center;
        color: #fff;
        position: relative;
      }
      
      .color-overlay {
        padding: 3em 2em;
        box-sizing: border-box;
        background: rgba(123, 94, 155, 0.5);
      }
      
      .actionbutton {
        position: absolute;
        background: #F93B69;
        width: 50px;
        height: 50px;
        font-size: 3em;
        font-weight: 300;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        bottom: -25px;
        right: 20px;
        box-shadow: 0 0 8px #202020;
      }
      
      .day-number {
        font-size: 4em;
        display: inline-block;
        margin-right: 15px;
      }
      
      .date-right {
        display: inline-block;
      }
      
      .day-name {
        font-size: 1.6em;
      }
      
      .month {
        text-transform: uppercase;
        font-weight: 300;
        font-size: 0.6em;
        letter-spacing: 2px;
        margin-top: 2px;
      }
      
      .timeline ul {
        padding: 1em 0 0 2em;
        margin: 0;
        list-style: none;
        position: relative;
      }
      .timeline ul::before {
        content: ' ';
        height: 100%;
        width: 1px;
        background-color: #d9d9d9;
        position: absolute;
        top: 0;
        left: 2.5em;
        z-index: -1;
      }
      .timeline li div {
        display: inline-block;
        margin: 1em 0;
        vertical-align: top;
      }
      .timeline .bullet {
        width: 1em;
        height: 1em;
        box-sizing: border-box;
        border-radius: 50%;
        background: #fff;
        z-index: 1;
        margin-right: 1em;
      }
      .timeline .bullet.pink {
        border: 2px solid #F93B69;
      }
      .timeline .bullet.green {
        border: 2px solid #B0E8E2;
      }
      .timeline .bullet.orange {
        border: 2px solid #EB8B6E;
      }
      .timeline .bullet.blue{
        border: 2px solid #456FFF;
      }
      .timeline .time {
        width: 20%;
        font-size: 0.75em;
        padding-top: 0.25em;
      }
      .timeline .desc {
        width: 50%;
      }
      .timeline h3 {
        font-size: 0.9em;
        font-weight: 400;
        margin: 0;
      }
      .timeline h4 {
        margin: 0;
        font-size: 0.7em;
        font-weight: 400;
        color: #808080;
      }
      .timeline .people img {
        width: 60px;
        height: 60px;
        border-radius: 50%;
      }
      
      .credits, .video {
        position: absolute;
        bottom: 10px;
        color: #808080;
        font-size: 100%;
        text-decoration: underline;
      }
      
      .credits {
        left: 10px;
      }
      
      .video {
        right: 10px;
      }
      
        </style>
      <script src="https://static.codepen.io/assets/editor/iframe/iframeConsoleRunner-dc0d50e60903d6825042d06159a8d5ac69a6c0e9bcef91e3380b17617061ce0f.js"></script>
      <script src="https://static.codepen.io/assets/editor/iframe/iframeRefreshCSS-e03f509ba0a671350b4b363ff105b2eb009850f34a2b4deaadaa63ed5d970b37.js"></script>
      <script src="https://static.codepen.io/assets/editor/iframe/iframeRuntimeErrors-29f059e28a3c6d3878960591ef98b1e303c1fe1935197dae7797c017a3ca1e82.js"></script>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css">
      <style>
      :root {
        --success-color: #2ecc71;
        --error-color: #e74c3c;
        --primary-color: #7b1594;
      }
      
      #html {
        box-sizing: border-box;
      }
      
      *,
      *:before,
      *:after {
        box-sizing: inherit;
      }
      
      #body {
        font-size: 16px;
        background-color: #fff;
        font-family: 'Open Sans', sans-serif;
        display: -webkit-box;
        display: flex;
        -webkit-box-align: center;
                align-items: center;
        -webkit-box-pack: center;
                justify-content: center;
        min-height: 100vh;
        margin: 0;
        line-height: 1.5;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      h2 {
        font-size: 1.8rem;
        margin-bottom: 2rem;
        text-align: center;
      }
      
      .container2 {
        background: white;
        border-radius: 25px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3), 0 2px 50px 0 rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 500px;
      }
      
      .form {
        padding: 1.5rem 1.8rem;
      }
      
      .author-link {
        display: block;
        text-align: center;
        opacity: 0.5;
        font-size: 14px;
      }
      
      .form-control {
        padding-bottom: 0.1rem;
        position: relative;
      }
      .form-control label {
        position: absolute;
        color: #333;
        display: block;
        margin-bottom: 5px;
        top: 8px;
        left: 14px;
      }
      .form-control input {
        border: 2px solid #f0f0f0;
        border-radius: 4px;
        display: block;
        width: 100%;
        padding: 10px;
        margin: 1rem 0;
        font-size: 1rem;
      }
      .form-control input:focus {
        border-color: var(--primary-color);
        outline: 0;
      }
      .form-control input:focus:valid {
        background: white;
        z-index: -1;
      }
      .form-control.success, .form-control.success input {
        border-color: var(--success-color);
      }
      .form-control.error, .form-control.error input {
        border-color: var(--error-color);
      }
      .form-control small {
        position: absolute;
        bottom: -1px;
        font-size: 12px;
        opacity: 1;
        color: var(--error-color);
        visibility: hidden;
      }
      .form-control.error small {
        visibility: visible;
      }
      .form-control input:focus + label, .form-control.active > label {
        -webkit-transform: scale(0.75) translate3d(-16px, -113%, 0);
                transform: scale(0.75) translate3d(-16px, -113%, 0);
        -webkit-transition: all linear 0.1s;
        transition: all linear 0.1s;
        background: white;
      }
      .form-control input::-webkit-input-placeholder {
        color: transparent;
      }
      .form-control input::-moz-placeholder {
        color: transparent;
      }
      .form-control input:-ms-input-placeholder {
        color: transparent;
      }
      .form-control input::-ms-input-placeholder {
        color: transparent;
      }
      .form-control input::placeholder {
        color: transparent;
      }
      
      .form button {
        cursor: pointer;
        background: var(--primary-color);
        border: 2px solid var(--primary-color);
        color: white;
        display: block;
        font-size: 16px;
        padding: 0.5rem;
        border-radius: 4px;
        width: 100%;
        margin-top: 1rem;
      }
      
      .active input::-webkit-input-placeholder {
        color: #6d6d6d;
      }
      
      .active input::-moz-placeholder {
        color: #6d6d6d;
      }
      
      .active input:-ms-input-placeholder {
        color: #6d6d6d;
      }
      
      .active input::-ms-input-placeholder {
        color: #6d6d6d;
      }
      
      .active input::placeholder {
        color: #6d6d6d;
      }
      </style> 
      <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@600&display=swap" rel="stylesheet">
      <script>
        function form_load() {
            var date = new Date()
            document.getElementById('date').value = date.getFullYear() + "-"  + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + (date.getDate())).slice(-2)
            document.getElementById('date_label').click();
            document.getElementById('time').value = ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2)
            document.getElementById('time_label').click()
            document.getElementById('endTime').value = ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2)
            document.getElementById('endTime_label').click()
            document.getElementById('notify_before').value = "00:05"
            document.getElementById('notify_label').click()
        }
    </script>
</head>
    <body>           
        <div id="overlay">
            <div class="loadPositioning">
                <div class="spinner-box">
                    <div class="circle-border">
                    <div class="circle-core"></div>
                    </div>
                </div>
            </div>
            <h1 class="wait1">Please Wait...</h1> 
        </div>
        <div style="background: #eceeff;display: flex;">
            <div style="flex: 70;font-size: 1.5rem;color: #53588b;padding: 1rem;padding: auto 0;margin: auto 0;" id="user">
                
            </div>
            <div style="flex: 25;color: #53588b;padding: 1rem;font-size: 1.5rem;padding: auto 0;margin: auto 0;float: right;" id="email">
                
            </div>
            <div style="flex: 5;">
                <img src="w.png" id="picture" alt="Profile Image" style="padding-top: 1rem;height: 3rem;width: 3rem;margin: auto 0;padding: auto 0;display: none;" class="ifrms">
            </div>
        </div>
        <div style="display: flex;float: right;" id="login_box">
            <div class="place">
            <div class="svg-wrapper">
              <svg height="60" width="320" xmlns="http://www.w3.org/2000/svg">
              <rect class="shape" height="60" width="320"></rect>
              </svg>
              <div class="text" style="font-family: 'Nunito', sans-serif;size: 1rem;">
               <a href="/appid/login" id="login" style="text-decoration: none;color: #000;">LOGIN</a>
              </div>
              </div>    
          </div>
        </div>
        <div style="display: flex;float: right;display: none;" id="logout_box">
            <div class="place">
            <div class="svg-wrapper">
              <svg height="60" width="320" xmlns="http://www.w3.org/2000/svg">
              <rect class="shape" height="60" width="320"></rect>
              </svg>
              <div class="text" style="font-family: 'Nunito', sans-serif;size: 1rem;">
               <a href="/appid/logout" id="login" style="text-decoration: none;color: #000;">LOGOUT</a>
              </div>
              </div>    
          </div>
          <div style="margin-top: 2rem;width: 15rem;color: #838794;font-weight: bolder;font-family: 'Nunito', sans-serif;margin: 0 2rem;">
            * You can click on the notification prompt to navigate to the link of the event you've specified
    <br><br>* Upcoming Notification panel refreshes for every 1 minute
    <br><br>* Refreshing the page may sometimes take a while as there are scheduled database requests at back 
          </div>
        </div>
          <script src="https://static.codepen.io/assets/common/stopExecutionOnTimeout-157cd5b220a5c80d4ff8e0e70ac069bffd87a61252088146915e8726e5d9f147.js"></script>
          <script id="rendered-js">
        </script>
        
        <script>
            setTimeout(() => {
              $().ready(()=>{
                $.get("/api/user")
                .then((resp)=>{
                    if(resp)
                    {
                    $('#user').text("Hi " + resp.user.name + "!")
                    $("#email").text(resp.user.email)
                    $("#email2").val(resp.user.email)
                    $("#picture").show()
                    if(resp.user.picture)
                    {
                      document.getElementById("picture").src = resp.user.picture
                    }
                    else{
                    var first_Char = resp.user.name.toLowerCase().split(" ")[0].charAt(0)
                    if(first_Char == 'U' || first_Char == 'u')
                    {
                      first_Char = resp.user.name.toLowerCase().split(" ")[1].charAt(0)
                    }
                    var img_src = first_Char.toString() + ".png"
                    console.log(img_src)
                    document.getElementById("picture").src = img_src
                    }
                    $("#logout_box").show()
                    $("#login_box").hide()
                    $("#event_form").show()
                    form_load()
                    $("#notifications_p").show()
                    $("#instr_panel").show()
                    }
                    
                })
            })
        
            }, 100);
           </script>


<div style="display: flex;height: 200rem;">
    <div style="flex: 1;">
      <div id="html">
        <div id="body">
          <div class="container2">
            <form action="/upload" id="event_form" style="display: none;" class="form" autocomplete="on" method="POST" enctype="multipart/form-data">
            <input type="email" name="email2" id="email2" style="display: none;">
            <p id="update_Event" style="color: #456FFF;font-weight: bold;display: none;">Updating Event Now!</p>
            <p id="return_p" style="color: green;font-weight: bold;display: block;"><%= return_message %></p>
            <div class="form-control">
            <label id="date_label" for="date">Date</label>
            <input type="date" name="date" id="date" autocomplete="bday" required>
            <small></small>
            </div>
            <div class="form-control">
                <label id="time_label" for="time">Start Time</label>
                <input type="time" name="time" id="time">
                <small></small>
            </div>
            <div class="form-control">
                <label id="endTime_label" for="endTime">End Time</label>
                <input type="time" name="endTime" id="endTime" required >
                <small></small>
            </div>
            <div class="form-control">
                <label id="notify_label" for="notify_before">Notify Before(in min)</label>
                <input type="time" name="notify_before" id="notify_before" min="00:05" max="00:59" required >
                <small></small>
            </div>
            <div class="form-control">
            <label id="title_label" for="title">Title</label>
            <input type="text" name="title" id="title" autocomplete="organization-title" placeholder="Conference Call" required >
            <small></small>
            </div>
            <div class="form-control">
              <label id="note_label" for="note">Note</label>
              <input type="text" name="note" id="note" placeholder="Add a small note" required >
              <small></small>
            </div>
            <div class="form-control">
                <label id="link_label" for="link">Link</label>
                <input type="url" name="link" id="link" autocomplete="url" placeholder="https://google.com.meet" required >
                <small></small>
            </div>
            <div class="form-control">
                <label id="image_label" for="file">Image - name will be strongly encrypted :)</label>
                <input type="file" name="file" id="file" autocomplete="photo" placeholder="image.png" required >
                <small></small>
                </div>
            <button type="submit" id="form_button" form="event_form">Schedule Event</button>
            </form>
            </div> 
        </div>
      </div>
     
    </div>
    <div style="flex: 1;">
    <p style="color:#838794;font-family: 'Nunito',sans-serif;max-width: 400px;max-height: 100px;margin: 30px auto 0;display: none;" id="instr_panel">
    * As soon as events load, tap once to start auto-scroll
<br><br>* Hover to pause scrolling
    </p>
        <div class="container">
            <div>
              <div class="header" style="height: 10rem;"> 
                </div>  
            </div>
           
            <div class="timeline">
            <marquee behavior="scroll" direction="up" scrollamount="10" id="marquee" onmouseout="this.start()" onmouseover="this.stop()">
                <p id="notifications_p">

                </p>
            </marquee>
            </div>
            </div>
            <script src="https://static.codepen.io/assets/common/stopExecutionOnTimeout-157cd5b220a5c80d4ff8e0e70ac069bffd87a61252088146915e8726e5d9f147.js"></script>
            <script id="INLINE_PEN_JS_ID">
              </script>
    </div>
</div>

<script src="https://static.codepen.io/assets/common/stopExecutionOnTimeout-157cd5b220a5c80d4ff8e0e70ac069bffd87a61252088146915e8726e5d9f147.js"></script>
<script id="rendered-js">
const form = document.getElementById('event_form');

function showError(input, message) {
  const formControl = input.parentElement;
  formControl.classList.add('error');
  const small = formControl.querySelector('small');
  small.innerText = message;
}

function showSuccess(input) {
  const formControl = input.parentElement;
  formControl.classList.remove('error');
  formControl.classList.add('success');
}

function checkRequired(inputArr) {
  inputArr.forEach(input => {
    const trimmedInput = input.value.trim();
    if (trimmedInput === '') {
      showError(input, `${getFieldName(input)} is required`);
      
    } else {
      showSuccess(input);
    }
  });
}

function checkLength(input, min, max) {
  if (input.value.length < min) {
    showError(
    input,
    `${getFieldName(input)} must be at least ${min} characters`);

  } else if (input.value.length > max) {
    showError(
    input,
    `${getFieldName(input)} must be less than ${max} characters`);

  } else {
    showSuccess(input);
  }
}

function getFieldName(input) {
  return `${input.name.charAt(0).toUpperCase()}${input.name.slice(1)}`;
}


/*--------------------------------------------------------------
  ## Event Handlers
  --------------------------------------------------------------*/

form.addEventListener('focusin', function handleFocus(event) {
  if (event.target.tagName == 'INPUT') {
    event.target.parentElement.classList.add('active');
  }
});

form.addEventListener('focusout', function handleBlur(event) {
  if (event.target.tagName === 'INPUT') {
    if (event.target.value === '')
    event.target.parentElement.classList.remove('active');
  }
});
//# sourceURL=pen.js
    </script>
<script src="https://static.codepen.io/assets/editor/iframe/iframeRefreshCSS-e03f509ba0a671350b4b363ff105b2eb009850f34a2b4deaadaa63ed5d970b37.js"></script>



<script>
    
    // Stores the original url in the local storage
    window.localStorage.setItem('specifiedKey', window.location.href);

    // Cleans the query parameter of a string and replace it in the history API
    const cleanUrl = location.href.match(/^.+(?=\?)/g);
    window.history.replaceState(null, null, (cleanUrl ? cleanUrl[0] : location.href));

    // the history is updated before the window reloads
    window.onbeforeunload = () => {
    window.history.replaceState(null, null, window.localStorage.getItem('specifiedKey'));
        }

  </script>
    </body>
</html>